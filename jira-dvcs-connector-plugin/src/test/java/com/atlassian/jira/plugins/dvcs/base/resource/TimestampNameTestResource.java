package com.atlassian.jira.plugins.dvcs.base.resource;

import java.util.Random;

/**
 * Provides timestamp name based strategy, useful for random name generating, which can be clean up, when it expires.
 *
 * @see #randomName(String, int)
 * @see #isExpired(String)
 *
 * @author Stanislav Dvorscak
 *
 */
public class TimestampNameTestResource
{

    /**
     * Random generator.
     */
    private Random random = new Random();

    /**
     * @param prefix
     *            name of prefix, which will be used by generated names. There is not necessary to have any underscore on end of prefix,
     *            because underscore is added automatically.
     * @param expirationDuration
     *            duration, after generated name will be consider to be {@link #isExpired(String) expired}
     * @return generated name
     * @see #isExpired(String)
     */
    public String randomName(String prefix, int expirationDuration)
    {
        return prefix + "_" + random.nextInt(1000) + "_" + (System.currentTimeMillis() + expirationDuration);
    }

    /**
     * @param name
     *            for check, previously generated by {@link #randomName(String, int)}
     * @return true, if provided name is considered, that it is already expired
     * @see #randomName(String, int)
     */
    public boolean isExpired(String name)
    {
        Long expirationTime = null;
        int lastIndexOfUnderscore = name.lastIndexOf('_');
        if (lastIndexOfUnderscore >= 0)
        {
            try
            {
                expirationTime = Long.valueOf(name.substring(lastIndexOfUnderscore + 1));
            } catch (NumberFormatException e)
            {
                throw new RuntimeException(e);
            }
        }

        return expirationTime != null && expirationTime <= System.currentTimeMillis();
    }

}
